{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","OppositeDirection","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","DirectionKeyCodeMap","keyCode","document","addEventListener","removeEventListener","Delta","37","38","39","40","delta","newPosition","position","isCollision","isEatingMyself","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6f7f47d8.chunk.js","sourcesContent":["import React from 'react'\n\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\n  const upVisibility = difficulty < 5 ? '' : 'is-hidden'\n  const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n  const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n  const onDownDifficulty = () => onChangeDifficulty(difficulty -1)  \n    return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n          <span className=\"navigation-label\">Length: </span>\n          <div className=\"navigation-item-number-container\">\n            <div className=\"num-board\">{length}</div>\n          </div>\n      </div>\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty: </span>\n        <div className=\"navigation-item-number-container\">\n          <span className=\"num-board\">{difficulty}</span>\n          <div className=\"difficulty-button-container\">\n              <div\n             className={`difficulty-button difficulty-up ${upVisibility}`}\n             onClick={onUpDifficulty}\n           ></div>\n           <div\n             className={`difficulty-button difficulty-down ${downVisibility}`}\n             onClick={onDownDifficulty}\n           ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Navigation","import React from 'react'\n\nconst Field = ({fields}) =>{\n    return(\n        <div className='field'>\n        {\n            fields.map((row) => {\n                return row.map((column => {\n                    return <div className={`dots ${column}`}></div>\n                }))\n            })\n        }\n        </div>\n    )\n}\n\nexport default Field","import React from 'react';\n\nconst Button = ({status,onStart,onStop,onRestart}) => {\n    return(\n        <div className='button'>\n            \n      { status === \"gameover\" && <button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button> }\n      { status === \"init\" && <button className=\"btn btn-init\" onClick={onStart}>start</button> }\n      { status === \"suspended\" && <button className=\"btn btn-suspended\" onClick={onStart}>start</button> }\n      { status === \"playing\" && <button className=\"btn btn-playing\" onClick={onStop}>stop</button> }\n            \n        </div>\n    )\n}\n\nexport default Button;","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport{\n    faArrowLeft,\n    faArrowUp,\n    faArrowDown,\n    faArrowRight\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ManipulationPanel = ({onChange}) => {\n    const onUp = () => onChange('up')\n    const onRight = () => onChange('right')\n    const onLeft = () => onChange('left')\n    const onDown = () => onChange('down')\n    return(\n        <div className='manipulationPanel'>\n            <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n                <FontAwesomeIcon icon={ faArrowLeft } />\n            </button>\n            <div className='a'>\n            <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n                <FontAwesomeIcon icon={faArrowUp} />\n            </button>\n            <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n                <FontAwesomeIcon icon={faArrowDown} />\n            </button>\n            </div>\n            <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n                <FontAwesomeIcon icon={faArrowRight} />\n            </button>\n        </div>\n    )\n}\n\nexport default ManipulationPanel","export const getFoodPosition = (fieldSize, excludes) => {\nwhile(true){\n  const x = Math.floor(Math.random() * ((fieldSize - 1) - 1)) + 1;\n  const y = Math.floor(Math.random() * ((fieldSize - 1) - 1)) + 1;\n  const conflict = excludes.some(item => item.x === x && item.y === y)\n  \n  if(!conflict){\n    return { x, y};\n  }\n }\n}\nexport const initFields = (fieldSize, snake) =>{\nconst fields = []\nfor(let i = 0; i < fieldSize; i++){\n    const cols = new Array(fieldSize).fill('')\n    fields.push(cols)\n }\n fields[snake.y][snake.x] = 'snake'\n const food = getFoodPosition(fieldSize, [snake])\n fields[food.x][food.y] = 'food'\n\n return fields //配列返却\n}","import React,{ useCallback, useState, useEffect } from 'react';\nimport Navigation from './components/Navigation';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport {initFields, getFoodPosition} from './utils/index'\nconst initialPosition = {x: 17, y: 17}\nconst initialValues =initFields(35, initialPosition)\nconst defaultInterval = 100\nconst defaultDifficulty = 3\nconst Difficulty = [1000, 500, 100, 50, 10]\n\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover'\n});\nconst Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down'\n})\n const OppositeDirection = Object.freeze({\n   up: 'down',\n   right: 'left',\n   left: 'right',\n   down: 'up'\n })\n\nlet timer = undefined;\nconst unsubscribe = () => {\n  if(!timer){\n    return\n  }\n  clearInterval(timer)\n}\n\nconst isCollision = (fieldSize, position) => {\n  if(position.y < 0 || position.x < 0){\n    return true;\n  }\n  if(position.y > fieldSize - 1 || position.x > fieldSize - 1){\n    return true;\n  }\n\n  return false;\n}\n\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake'\n}\n\nfunction App() {\n  const[fields, setFields] = useState(initialValues)\n  const [position, setPosition] = useState()\n  const [body,setBody] = useState([])\n  const [status, setStatus] = useState(GameStatus.init)\n  const [direction,setDirection] = useState(Direction.up)\n  const [difficulty, setDifficulty] = useState(defaultDifficulty)\n  const [tick, setTick]=useState(0)\n  useEffect(()=>{\n    setBody([initialPosition])\n    //ゲームの中の時間を管理する\n    const interval = Difficulty[difficulty - 1]\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, interval)\n    return unsubscribe\n  }, [difficulty])\n\n    useEffect(()=>{\n      if(body.length === 0 || status !== GameStatus.playing){\n        return\n      }\n      const canContinue = handleMoving()\n      if(!canContinue){\n        unsubscribe()\n        setStatus(GameStatus.gameover)\n      }\n    },[tick])\nconst onStart = () => setStatus(GameStatus.playing)\nconst onStop = () => setStatus(GameStatus.suspended)\nconst onRestart = () => {\n  timer = setInterval(() => {\n    setTick(tick => tick + 1)\n  }, defaultInterval)\n  setDirection(Direction.up)\n  setStatus(GameStatus.init)\n  setBody([initialPosition])\n  setFields(initFields(35, initialPosition))\n}\nconst onChangeDirection = useCallback((newDirection) => {\n  if(status !== GameStatus.playing){\n    return Direction\n  }\nif (OppositeDirection[direction] === newDirection){\nreturn\n}\nsetDirection(newDirection)\n},[direction , status])\nconst onChangeDifficulty = useCallback((difficulty) => {\nif(status !== GameStatus.init){\n  return\n}\nif(difficulty < 1 || difficulty > Difficulty.length){\n  return\n}\nsetDifficulty(difficulty)\n},[status,difficulty])\n\nuseEffect(() => {\n  const handleKeyDown = (e) => {\n    const newDirection = DirectionKeyCodeMap[e.keyCode]\n    if(!newDirection){\n      return\n    }\n    onChangeDirection(newDirection)\n  }\n  document.addEventListener('keydown', handleKeyDown)\n  return () => document.removeEventListener('keydown', handleKeyDown)\n},[onChangeDirection])\n\nconst Delta = Object.freeze({\n  up: {x:0,y:-1},\n  right: {x:1,y:0},\n  left: {x:-1,y:0},\n  down: {x:0,y:1}\n})\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n})\n// const handleKeyDown = (e) =>{\n//   const newDirection = DirectionKeyCodeMap[e.keyCode];\n//   if(!newDirection) {\n//     return;\n//   }\n//   onChangeDirection();\n// // }\n// document.addEventListener('keyDown',handleKeyDown);\nconst handleMoving = () => {\n  const { x, y } = body[0]\n  const delta = Delta[direction]\n  const newPosition = { \n    x: x + delta.x,\n    y: y + delta.y \n  }\n      if (isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)) {\n          return false\n      }\n  const newBody = [...body]\n  if (fields[newPosition.y][newPosition.x] !== 'food') {\n    const removingTrack = newBody.pop()\n    fields[removingTrack.y][removingTrack.x] = ''\n  } else {\n    const food = getFoodPosition(fields.length,[...newBody, newPosition])\n    fields[food.y][food.x] = 'food'\n  }\n  fields[newPosition.y][newPosition.x] = 'snake'\n  newBody.unshift(newPosition)\n\n  setBody(newBody)\n  setFields(fields)\n  return true\n}\n  return (\n    <div className=\"App\">\n      <header className='header'>\n        <div className='title-container'>\n          <h1 className='title'>🐍Snake Game🐍</h1>\n        </div>\n          <Navigation \n          length={body.length} \n          difficulty={difficulty}\n          onChangeDifficulty={onChangeDifficulty}/>\n      </header>\n      <main className='main'>\n        <Field fields={initialValues}/>\n      </main>\n      <footer className='footer'>\n        <Button status={status} onStart={onStart} onStop={onStop}　onRestart={onRestart}/>\n        <ManipulationPanel onChange={onChangeDirection}/>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}